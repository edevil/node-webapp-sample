apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "noder.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "noder.name" . }}
    helm.sh/chart: {{ include "noder.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:

{{- if .Values.replicaCount }}
  replicas: {{ .Values.replicaCount }}
{{- end }}

  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "noder.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "noder.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: BASE_URL
              value: "https://noder.labs.brpx.com"
            - name: LOG_SQL
              value: "false"
            - name: ORIGINS
              value: '["https://noder.labs.brpx.com"]'
            - name: DB_NAME
              value: "noder-develop"
            - name: DB_USER
              value: "noder-develop"
            - name: DB_HOST
              value: "sqlproxy-service.sharedsvc"
            - name: REDIS_HOST
              value: "10.0.0.4"
            - name: TRUST_X_HEADERS
              value: "true"
            - name: GOOGLE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "noder.name" . }}-secret
                  key: google-client-secret
            - name: GOOGLE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "noder.name" . }}-secret
                  key: google-client-id
            - name: APP_KEYS
              valueFrom:
                secretKeyRef:
                  name: {{ include "noder.name" . }}-secret
                  key: app-keys
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "noder.name" . }}-secret
                  key: db-password
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
            timeoutSeconds: 5
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: {{ include "noder.name" . }}
                  app.kubernetes.io/instance: {{ .Release.Name }}
              topologyKey: kubernetes.io/hostname

    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
  strategy:
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  minReadySeconds: 2
  revisionHistoryLimit: 14
